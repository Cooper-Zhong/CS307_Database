import java.sql.*;import java.util.Scanner;import java.util.regex.Pattern;public class PostHandler {    /**     * Post handler     * 1. create a post     * 2. delete a post     */    private static Connection con;    private static PreparedStatement stmt;    private static Scanner in;    public PostHandler(Connection con, Scanner in) {        PostHandler.con = con;        PostHandler.in = in;    }    public void handlePost() {        System.out.println("Operation: [1]create a post\t[2]delete a post");        System.out.println("--------------------------------------------------------------");        // current operation code        int opcode = readNum();        switch (opcode) {            case 1 -> createPost();            case 2 -> deletePost();            default -> {                System.out.println("Invalid, please input a valid number.");                System.out.println("-------------------------------------");            }        }    }    private void deletePost() {        System.out.println("Please enter the post ID you want to delete:");        System.out.println("--------------------------------------------");        int post_id = readNum();        try {            //ERROR: update or delete on table "posts" violates foreign key constraint            // "post_category_post_id_fkey" on table "post_category"            //  详细：Key (post_id)=(204) is still referenced from table "post_category".            //delete from post_category first            String sql = "delete from post_category where post_id = ?;";            stmt = con.prepareStatement(sql);            stmt.setInt(1, post_id);            stmt.executeUpdate();            String sql2 = "delete from posts where post_id = ? and author_name = ?;";//must be one's own post            stmt = con.prepareStatement(sql2);            stmt.setInt(1, post_id);            stmt.setString(2, AccountHandler.getUser());// why error?            int affectedRows = stmt.executeUpdate();            if (affectedRows == 0) {                System.out.println("Failed to delete post, please check the post ID.");                System.out.println("------------------------------------------------");            } else {                System.out.println("Post deleted successfully!");                System.out.println("--------------------------");            }        } catch (SQLException e) {            System.out.println("Failed to delete post.");            System.out.println("----------------------");            System.err.println("" + e.getMessage());        }    }    private void createPost() {        System.out.println("Please enter the title of your post:");        System.out.println("------------------------------------");        in.nextLine();        String title = in.nextLine();        System.out.println("Please enter the content of your post:");        System.out.println("--------------------------------------");        String content = in.nextLine();        System.out.println("Please enter the tags of your post, separated by comma:");        System.out.println("-------------------------------------------------------");        String tags = in.nextLine();        String[] categories = tags.split(",");        try {            String sql = "insert into posts (author_name, title, content, post_city, post_time) " +                    "values (?, ?, ?, ?, now()::timestamp(0));"; // precision to second            stmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);// get the post_id just created            stmt.setString(1, AccountHandler.getUser());            stmt.setString(2, title);            stmt.setString(3, content);            stmt.setString(4, "Shenzhen, China");            stmt.executeUpdate();            ResultSet rs = stmt.getGeneratedKeys(); // get the post_id            int post_id = 0; // get the post_id of the post just created            if (rs.next()) {                post_id = rs.getInt("post_id");            }            for (String category : categories) {                // insert into categories                sql = "insert into categories (category_name) values (?) on duplicate key update nothing;";                stmt = con.prepareStatement(sql);                stmt.setString(1, category);                stmt.executeUpdate();                // insert into post_category                sql = "insert into post_category (post_id, category_name) values (?, ?);";                stmt = con.prepareStatement(sql);                stmt.setInt(1, post_id);                stmt.setString(2, category);                stmt.executeUpdate();            }            System.out.println("Post created successfully!");            System.out.println("--------------------------");        } catch (SQLException e) {            System.out.println("Failed to create post.");            System.out.println("----------------------");            System.err.println("" + e.getMessage());        }    }    private boolean isNum(String s) {        Pattern pattern = Pattern.compile("^[-\\+]?\\d*$"); // match integers        return pattern.matcher(s).matches();    }    private int readNum() {        String s = in.next();        if (!isNum(s)) {            System.out.println("Invalid input, please input a number.");            System.out.println("-------------------------------------");            return -1;        }        return Integer.parseInt(s);    }}